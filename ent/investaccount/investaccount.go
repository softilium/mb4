// Code generated by entc, DO NOT EDIT.

package investaccount

import (
	"github.com/rs/xid"
)

const (
	// Label holds the string label denoting the investaccount type in the database.
	Label = "invest_account"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDescr holds the string denoting the descr field in the database.
	FieldDescr = "descr"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "Owner"
	// EdgeCashflows holds the string denoting the cashflows edge name in mutations.
	EdgeCashflows = "Cashflows"
	// EdgeValuations holds the string denoting the valuations edge name in mutations.
	EdgeValuations = "Valuations"
	// Table holds the table name of the investaccount in the database.
	Table = "invest_accounts"
	// OwnerTable is the table that holds the Owner relation/edge.
	OwnerTable = "invest_accounts"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the Owner relation/edge.
	OwnerColumn = "user_invest_accounts"
	// CashflowsTable is the table that holds the Cashflows relation/edge.
	CashflowsTable = "invest_account_cashflows"
	// CashflowsInverseTable is the table name for the InvestAccountCashflow entity.
	// It exists in this package in order to avoid circular dependency with the "investaccountcashflow" package.
	CashflowsInverseTable = "invest_account_cashflows"
	// CashflowsColumn is the table column denoting the Cashflows relation/edge.
	CashflowsColumn = "invest_account_cashflows"
	// ValuationsTable is the table that holds the Valuations relation/edge.
	ValuationsTable = "invest_account_valuations"
	// ValuationsInverseTable is the table name for the InvestAccountValuation entity.
	// It exists in this package in order to avoid circular dependency with the "investaccountvaluation" package.
	ValuationsInverseTable = "invest_account_valuations"
	// ValuationsColumn is the table column denoting the Valuations relation/edge.
	ValuationsColumn = "invest_account_valuations"
)

// Columns holds all SQL columns for investaccount fields.
var Columns = []string{
	FieldID,
	FieldDescr,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "invest_accounts"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_invest_accounts",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DescrValidator is a validator for the "Descr" field. It is called by the builders before save.
	DescrValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() xid.ID
)
