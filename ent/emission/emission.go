// Code generated by entc, DO NOT EDIT.

package emission

import (
	"github.com/rs/xid"
)

const (
	// Label holds the string label denoting the emission type in the database.
	Label = "emission"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRecDate holds the string denoting the recdate field in the database.
	FieldRecDate = "rec_date"
	// FieldSize holds the string denoting the size field in the database.
	FieldSize = "size"
	// FieldFreeFloat holds the string denoting the freefloat field in the database.
	FieldFreeFloat = "free_float"
	// FieldLotSize holds the string denoting the lotsize field in the database.
	FieldLotSize = "lot_size"
	// FieldListingLevel holds the string denoting the listinglevel field in the database.
	FieldListingLevel = "listing_level"
	// EdgeTicker holds the string denoting the ticker edge name in mutations.
	EdgeTicker = "Ticker"
	// Table holds the table name of the emission in the database.
	Table = "emissions"
	// TickerTable is the table that holds the Ticker relation/edge.
	TickerTable = "emissions"
	// TickerInverseTable is the table name for the Ticker entity.
	// It exists in this package in order to avoid circular dependency with the "ticker" package.
	TickerInverseTable = "tickers"
	// TickerColumn is the table column denoting the Ticker relation/edge.
	TickerColumn = "ticker_emissions"
)

// Columns holds all SQL columns for emission fields.
var Columns = []string{
	FieldID,
	FieldRecDate,
	FieldSize,
	FieldFreeFloat,
	FieldLotSize,
	FieldListingLevel,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "emissions"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"ticker_emissions",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() xid.ID
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
