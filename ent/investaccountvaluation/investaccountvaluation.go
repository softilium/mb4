// Code generated by entc, DO NOT EDIT.

package investaccountvaluation

import (
	"github.com/rs/xid"
)

const (
	// Label holds the string label denoting the investaccountvaluation type in the database.
	Label = "invest_account_valuation"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRecDate holds the string denoting the recdate field in the database.
	FieldRecDate = "rec_date"
	// FieldValue holds the string denoting the value field in the database.
	FieldValue = "value"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "Owner"
	// Table holds the table name of the investaccountvaluation in the database.
	Table = "invest_account_valuations"
	// OwnerTable is the table that holds the Owner relation/edge.
	OwnerTable = "invest_account_valuations"
	// OwnerInverseTable is the table name for the InvestAccount entity.
	// It exists in this package in order to avoid circular dependency with the "investaccount" package.
	OwnerInverseTable = "invest_accounts"
	// OwnerColumn is the table column denoting the Owner relation/edge.
	OwnerColumn = "invest_account_valuations"
)

// Columns holds all SQL columns for investaccountvaluation fields.
var Columns = []string{
	FieldID,
	FieldRecDate,
	FieldValue,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "invest_account_valuations"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"invest_account_valuations",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() xid.ID
)
