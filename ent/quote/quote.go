// Code generated by entc, DO NOT EDIT.

package quote

const (
	// Label holds the string label denoting the quote type in the database.
	Label = "quote"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldD holds the string denoting the d field in the database.
	FieldD = "d"
	// FieldO holds the string denoting the o field in the database.
	FieldO = "o"
	// FieldC holds the string denoting the c field in the database.
	FieldC = "c"
	// FieldH holds the string denoting the h field in the database.
	FieldH = "h"
	// FieldL holds the string denoting the l field in the database.
	FieldL = "l"
	// FieldV holds the string denoting the v field in the database.
	FieldV = "v"
	// FieldCap holds the string denoting the cap field in the database.
	FieldCap = "cap"
	// FieldDivSum5Y holds the string denoting the divsum_5y field in the database.
	FieldDivSum5Y = "div_sum_5y"
	// FieldDivYield5Y holds the string denoting the divyield_5y field in the database.
	FieldDivYield5Y = "div_yield_5y"
	// FieldLotSize holds the string denoting the lotsize field in the database.
	FieldLotSize = "lot_size"
	// FieldListLevel holds the string denoting the listlevel field in the database.
	FieldListLevel = "list_level"
	// EdgeTicker holds the string denoting the ticker edge name in mutations.
	EdgeTicker = "Ticker"
	// Table holds the table name of the quote in the database.
	Table = "quotes"
	// TickerTable is the table that holds the Ticker relation/edge.
	TickerTable = "quotes"
	// TickerInverseTable is the table name for the Ticker entity.
	// It exists in this package in order to avoid circular dependency with the "ticker" package.
	TickerInverseTable = "tickers"
	// TickerColumn is the table column denoting the Ticker relation/edge.
	TickerColumn = "ticker_quotes"
)

// Columns holds all SQL columns for quote fields.
var Columns = []string{
	FieldID,
	FieldD,
	FieldO,
	FieldC,
	FieldH,
	FieldL,
	FieldV,
	FieldCap,
	FieldDivSum5Y,
	FieldDivYield5Y,
	FieldLotSize,
	FieldListLevel,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "quotes"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"ticker_quotes",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// LotSizeValidator is a validator for the "LotSize" field. It is called by the builders before save.
	LotSizeValidator func(int) error
	// ListLevelValidator is a validator for the "ListLevel" field. It is called by the builders before save.
	ListLevelValidator func(int) error
)
